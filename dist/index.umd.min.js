/*!
 * quasar-ui-formtable-ext v0.0.1
 * (c) 2020 John Robinson <johnrob1880@gmail.com>
 * Released under the MIT License.
 */
!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("vue"),require("quasar")):"function"==typeof define&&define.amd?define(["exports","vue","quasar"],o):o((e=e||self).qFormtable={},e.Vue,e.Quasar)}(this,function(e,o,r){"use strict";if(void 0!==o){o=o&&o.hasOwnProperty("default")?o.default:o;var n={name:"QFormtable",props:{columns:Array,title:String,buttonText:{type:String,default:"Finish"},loading:Boolean,data:{type:Array,default:function(){return[]}}},render:function(e){var o,n=this;return e(r.QTable,{staticClass:"QFormtable",props:Object.assign({},n.$props),scopedSlots:(o={},o["top-row"]=function(){return[n.$scopedSlots.topRow&&n.$scopedSlots.topRow()||e("div")]},o["bottom-row"]=function(){return[n.$scopedSlots.bottomRow&&n.$scopedSlots.bottomRow()||e("div")]},o.bottom=function(){return[e(r.QBtn,{on:{click:function(){return n.$emit("addRow")}},props:{disable:n.loading,icon:"add",color:"grey-7",dense:!0,size:"sm"}},["New Row"]),e(r.QSpace),e(r.QBtn,{props:{disable:n.loading,color:"primary",dense:!0,size:"sm"},on:{click:function(){n.$emit("complete",n.data)}}},n.buttonText)]},o["top-right"]=function(o){return e(r.QBtn,{on:{click:o.toggleFullscreen},props:{disabled:n.loading,class:"q-ml-md",flat:!0,round:!0,dense:!0,icon:o.inFullScreen?"fullscreen_exit":"fullscreen"}})},o.body=function(o){return e(r.QTr,{},n.columns.reduce(function(t,s){var a;return s.options?t.push(e(r.QTd,{class:"q-pt-md"},[e(r.QSelect,{props:{disable:n.loading,hideBottomSpace:!o.row._errors,error:!(!o.row._errors||!o.row._errors[s.name]),errorMessage:o.row._errors&&o.row._errors[s.name],name:s.name,value:o.row[s.name],model:o.row[s.name],filled:!0,dense:!0,square:!0,options:s.options},on:{input:function(e){return o.row[s.name]=e}}})])):s.type===Boolean?t.push(e(r.QTd,{},[e(r.QCheckbox,{props:Object.assign({},{disable:n.loading,name:s.name,dense:!0},o.row.props||{},{value:!!o.row[s.name],model:o.row[s.name]}),on:{input:function(e){return o.row[s.name]=e}}})])):t.push(e(r.QTd,{class:"q-pt-md"},[e(r.QInput,{props:Object.assign({},o.row.props||{},{disable:n.loading,hideBottomSpace:!o.row._errors,error:!(!o.row._errors||!o.row._errors[s.name]),errorMessage:o.row._errors&&o.row._errors[s.name],square:!0,filled:!0,dense:!0,name:s.name,value:o.row[s.name],type:s.props&&s.props.type||"text",model:s.props&&"number"===s.props.type?(a={},a[s.props.type]=o.row[s.name],a):o.row[s.name]}),on:{input:function(e){s.props&&"number"===s.props.type?o.row[s.name]=parseFloat(e):o.row[s.name]=e}}})])),t},[]))},o)})}},t={version:"0.0.1",Component:n,install:function(e){e.component(n.name,n)}};o.use(t),e.Component=n,e.version="0.0.1",Object.defineProperty(e,"__esModule",{value:!0})}else console.error("[ Quasar ] Vue is required to run. Please add a script tag for it before loading Quasar.")});